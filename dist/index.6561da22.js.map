{"mappings":"AAAA,MAAM,SAAS,GAAG,CAAC,CAAC,WAAW,CAAC;AAChC,MAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC;AACzC,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC;AACnC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7B,MAAM,OAAO,GAAG,OAAO,IAAI;IACvB;QAAE,IAAI,EAAE,GAAG;QAAE,GAAG,EAAE,sBAAsB;KAAE;IAC1C;QAAE,IAAI,EAAE,GAAG;QAAE,GAAG,EAAE,0BAA0B;KAAE;CACjD;AACD,oCAAc;AACQ,MAAhB,WAAW,GAAC,CAAC,GAAG,GAAG;IACrB,OAAO,GAAG,CAAC,OAAO,CAAC,UAAU,EAAC,EAAE,CAAC,CACtB,OAAO,CAAC,SAAS,EAAC,EAAE,CAAC,CACrB,OAAO,CAAC,MAAM,EAAC,EAAE,CAAC,CAClB,OAAO,SAAQ,EAAE,CAAC,CAAE,yBAAW;KAAb;CAClB;AAEf,MAAM,MAAM,GAAC,IAAI;IACb,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,EAAE;IACxC,OAAO,CAAC,OAAO,CACX,iEAA4B;IACS,CAApC,IAAI,EAAC,KAAK,GAAK;QACZ,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,gGAEmB,EAAE,IAAI,CAAC,IAAI,CAAC,sDACZ,EAAE,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,6TAOjD,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC;QAC7B,iCAAe;QACG,GAAf,CAAC,EAAE,CAAC,OAAO,EAAC,IAAI;YACf,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;SACxB,CAAC;QACF,gEAAwB;QACgB,GAArC,CAAC,EAAE,CAAC,OAAO,EAAC,QAAQ,EAAC,CAAC,CAAC,GAAG;YACzB,CAAC,CAAC,eAAe,EAAE;YACnB,oCAAkB;YACA,OAAX,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC;YACvB,2BAAW;YACK,MAAV,EAAE;SACX,CAAC;KACT,CACJ;CACJ;AAED,MAAM,EAAE;AAER,CAAC,CAAC,YAAY,CAAC,CACV,EAAE,CAAC,OAAO,EAAE,IAAM;IACf,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,qBAAS,CAAa;IAClC,IAAR,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EACzB,GAAG,GAAG,UAAU,GAAG,GAAG;IAE1B,OAAO,CAAC,IAAI,CAAC;QACT,kDAAoB;QACU,IAA1B,EAAE,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACzB,GAAG,EAAE,GAAG;KACX,CAAC;IACF,MAAM,EAAE;CACX,CAAC;AACN,MAAM,CAAC,cAAc,GAAG,IAAM;IAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;IACtC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC;CAClC;AACH,+BAAa;AACK,CAAjB,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,UAAU,EAAC,CAAC,CAAC,GAAG;IAC3B,iDAAqB;IACO,MAAtB,EAAC,GAAG,CAAA,EAAC,GAAC,CAAC;IACb,IAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,OAAO,CAAC,MAAM,EAAC,CAAC,EAAE,CAC5B,oEAAkC;IACI,2BAAvB;IACf,IAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,KAAG,GAAG,EAClC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;CAGtC,CAAC","sources":["main1.js"],"sourcesContent":["const $sitelist = $('.sitelist')\r\nconst $lastLi = $sitelist.find('li.last')\r\nconst x = localStorage.getItem('x')\r\nconst xObject = JSON.parse(x)\r\nconst hashMap = xObject || [\r\n    { logo: 'A', url: 'https://www.acfun.cn' },\r\n    { logo: 'B', url: 'https://www.bilibili.com' }\r\n]\r\n// 删掉链接里面多余的部分\r\nconst simplifyUrl=(url)=>{\r\n    return url.replace('https://','')\r\n              .replace('http://','')\r\n              .replace('www.','')\r\n              .replace(/\\/.*/,'')  // 删除/开头的内容\r\n}\r\n\r\nconst render=()=>{\r\n    $sitelist.find('li:not(.last)').remove()\r\n    hashMap.forEach(\r\n        // 为了让点哪个×就关闭哪个页面,用index添加下标\r\n        (node,index) => {\r\n            const $li = $(`<li>\r\n                        <div class=\"site\">\r\n                            <div class=\"logo\">${node.logo}</div>\r\n                            <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n                            <div class=\"close\">\r\n                                <svg class=\"icon\">\r\n                                    <use xlink:href=\"#icon-quxiao\"></use>\r\n                                </svg>\r\n                            </div>\r\n                        </div>    \r\n                </li>`).insertBefore($lastLi)\r\n                // 用on标签代替a标签实现\r\n                $li.on('click',()=>{\r\n                    window.open(node.url)\r\n                })\r\n                // 设置点击叉叉的时候不点击网站:利用阻止冒泡\r\n                $li.on('click','.close',(e)=>{\r\n                    e.stopPropagation()\r\n                    // 从下标为index开始删除1个\r\n                    hashMap.splice(index,1)\r\n                    // 删除之后重新渲染\r\n                    render()\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\nrender()\r\n\r\n$('.addbutton')\r\n    .on('click', () => {\r\n        let url = window.prompt('添加的网址是?')\r\n        if (url.indexOf('http') !== 0) {\r\n            url = 'https://' + url\r\n        }\r\n        hashMap.push({\r\n            // 引用函数删掉前面的部分,再取第0个\r\n            logo: simplifyUrl(url)[0],\r\n            url: url\r\n        })\r\n        render()\r\n    })\r\nwindow.onbeforeunload = () => {\r\n    const string = JSON.stringify(hashMap)\r\n    localStorage.setItem('x', string)\r\n  }      \r\n// 当按下键盘时的事件:\r\n$(document).on('keypress',(e)=>{\r\n    // 键盘上打哪个键,就显示哪个键的key\r\n    const {key}=e\r\n    for(let i=0;i<hashMap.length;i++){\r\n        // 如果hashmap里哪一项的logo的小写是键盘上打出的key\r\n            // 就打开这项的链接\r\n        if(hashMap[i].logo.toLowerCase()===key){\r\n            window.open(hashMap[i].url)\r\n        }\r\n    }\r\n})"],"names":[],"version":3,"file":"index.6561da22.js.map","sourceRoot":"/__parcel_source_root/"}